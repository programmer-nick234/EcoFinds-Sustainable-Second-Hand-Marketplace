{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///E:/ODOO/hackathon_2.0/frontend/ecofinds_frontend/src/app/login/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { useState } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Link from 'next/link';\r\nimport { useForm } from 'react-hook-form';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\nimport { z } from 'zod';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { Eye, EyeOff, Loader2, AlertCircle } from 'lucide-react';\r\n\r\nconst loginSchema = z.object({\r\n  username: z.string().min(1, 'Username is required'),\r\n  password: z.string().min(1, 'Password is required'),\r\n  remember_me: z.boolean().optional()\r\n});\r\n\r\ntype LoginFormData = z.infer<typeof loginSchema>;\r\n\r\nexport default function LoginPage() {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const router = useRouter();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    setError: setFieldError\r\n  } = useForm<LoginFormData>({\r\n    resolver: zodResolver(loginSchema)\r\n  });\r\n\r\n  const onSubmit = async (data: LoginFormData) => {\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      await login(data.username, data.password);\r\n      router.push('/landing');\r\n    } catch (err: unknown) {\r\n      if (err && typeof err === 'object' && 'field' in err) {\r\n        setFieldError((err as any).field as keyof LoginFormData, {\r\n          type: 'manual',\r\n          message: (err as any).message\r\n        });\r\n      } else {\r\n        const errorMessage = err instanceof Error ? err.message : 'Login failed. Please try again.';\r\n        setError(errorMessage);\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"flex justify-center\">\r\n          <div className=\"w-12 h-12 bg-green-600 rounded-lg flex items-center justify-center\">\r\n            <span className=\"text-white font-bold text-xl\">E</span>\r\n          </div>\r\n        </div>\r\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\r\n          Sign in to your account\r\n        </h2>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Or{' '}\r\n          <Link\r\n            href=\"/register\"\r\n            className=\"font-medium text-green-600 hover:text-green-500\"\r\n          >\r\n            create a new account\r\n          </Link>\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\r\n          <form className=\"space-y-6\" onSubmit={handleSubmit(onSubmit)}>\r\n            {/* Global Error */}\r\n            {error && (\r\n              <div className=\"bg-red-50 border border-red-200 text-red-600 px-4 py-3 rounded-md flex items-center\">\r\n                <AlertCircle className=\"h-5 w-5 mr-2\" />\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            {/* Username Field */}\r\n            <div>\r\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700\">\r\n                Username or Email\r\n              </label>\r\n              <div className=\"mt-1\">\r\n                <input\r\n                  {...register('username')}\r\n                  type=\"text\"\r\n                  autoComplete=\"username\"\r\n                  className={`appearance-none block w-full px-3 py-2 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm ${\r\n                    errors.username ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your username or email\"\r\n                />\r\n                {errors.username && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.username.message}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Password Field */}\r\n            <div>\r\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\r\n                Password\r\n              </label>\r\n              <div className=\"mt-1 relative\">\r\n                <input\r\n                  {...register('password')}\r\n                  type={showPassword ? 'text' : 'password'}\r\n                  autoComplete=\"current-password\"\r\n                  className={`appearance-none block w-full px-3 py-2 pr-10 border rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-green-500 focus:border-green-500 sm:text-sm ${\r\n                    errors.password ? 'border-red-300' : 'border-gray-300'\r\n                  }`}\r\n                  placeholder=\"Enter your password\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                  onClick={() => setShowPassword(!showPassword)}\r\n                >\r\n                  {showPassword ? (\r\n                    <EyeOff className=\"h-5 w-5 text-gray-400\" />\r\n                  ) : (\r\n                    <Eye className=\"h-5 w-5 text-gray-400\" />\r\n                  )}\r\n                </button>\r\n                {errors.password && (\r\n                  <p className=\"mt-1 text-sm text-red-600\">{errors.password.message}</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Remember Me & Forgot Password */}\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center\">\r\n                <input\r\n                  {...register('remember_me')}\r\n                  type=\"checkbox\"\r\n                  className=\"h-4 w-4 text-green-600 focus:ring-green-500 border-gray-300 rounded\"\r\n                />\r\n                <label htmlFor=\"remember_me\" className=\"ml-2 block text-sm text-gray-900\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"text-sm\">\r\n                <Link\r\n                  href=\"/forgot-password\"\r\n                  className=\"font-medium text-green-600 hover:text-green-500\"\r\n                >\r\n                  Forgot your password?\r\n                </Link>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Submit Button */}\r\n            <div>\r\n              <button\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {isLoading ? (\r\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\r\n                ) : (\r\n                  'Sign in'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </form>\r\n\r\n          {/* Demo Account Info */}\r\n          <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-md\">\r\n            <h3 className=\"text-sm font-medium text-blue-800 mb-2\">Demo Account</h3>\r\n            <p className=\"text-xs text-blue-700\">\r\n              <strong>Username:</strong> admin<br />\r\n              <strong>Password:</strong> admin123\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}