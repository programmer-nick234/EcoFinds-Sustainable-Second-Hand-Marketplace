{"version":3,"sources":["turbopack:///[project]/ecofinds_frontend/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/ecofinds_frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/ecofinds_frontend/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/ecofinds_frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { User, authService, AuthError } from '@/lib/auth';\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (username: string, password: string) => Promise<void>;\r\n  register: (data: any) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  updateProfile: (data: Partial<User>) => Promise<void>;\r\n  changePassword: (data: any) => Promise<void>;\r\n  isAuthenticated: boolean;\r\n  error: string | null;\r\n  clearError: () => void;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = authService.getToken();\r\n      if (token) {\r\n        try {\r\n          const userData = await authService.getProfile();\r\n          setUser(userData);\r\n        } catch (error: unknown) {\r\n          console.error('Failed to get user profile:', error);\r\n          // If token is invalid, clear it and redirect to login\r\n          if ((error as any).response?.status === 401) {\r\n            authService.logout();\r\n          }\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authService.login({ username, password });\r\n      setUser(response.user);\r\n    } catch (err: unknown) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Login failed';\r\n      setError(errorMessage);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const register = async (data: any) => {\r\n    try {\r\n      setError(null);\r\n      const response = await authService.register(data);\r\n      setUser(response.user);\r\n    } catch (err: unknown) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Registration failed';\r\n      setError(errorMessage);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n      setUser(null);\r\n      setError(null);\r\n    } catch (err: any) {\r\n      console.error('Logout error:', err);\r\n      // Still clear user data even if logout request fails\r\n      setUser(null);\r\n      setError(null);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (data: Partial<User>) => {\r\n    try {\r\n      setError(null);\r\n      const updatedUser = await authService.updateProfile(data);\r\n      setUser(updatedUser);\r\n    } catch (err: unknown) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Profile update failed';\r\n      setError(errorMessage);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const changePassword = async (data: any) => {\r\n    try {\r\n      setError(null);\r\n      await authService.changePassword(data);\r\n    } catch (err: unknown) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Password change failed';\r\n      setError(errorMessage);\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    isAuthenticated: !!user,\r\n    error,\r\n    clearError,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"0NA0BQG,EAAOC,OAAO,CAAGC,EAAQ,CAAA,CAAA,IAAA,gCC1BjCF,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEC,eAAe,+BCFxCP,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEE,KAAK,2MCA9B,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAeA,IAAM,EAAc,CAAA,EAAA,EAAA,aAAA,AAAa,OAA8B,GAElD,EAAU,KACrB,IAAM,EAAU,CAAA,EAAA,EAAA,UAAU,AAAV,EAAW,GAC3B,QAAgB,IAAZ,EACF,KADyB,CACnB,AAAI,MAAM,+CAElB,OAAO,CACT,EAEa,EAAwD,CAAC,UAAE,CAAQ,CAAE,IAChF,GAAM,CAAC,EAAM,EAAQ,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAc,MACxC,CAAC,EAAS,EAAW,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GACjC,CAAC,EAAO,EAAS,CAAG,CAAA,EAAA,EAAA,QAAQ,AAAR,EAAwB,MAElD,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KAkBR,CAjBiB,UAEf,GADc,CACV,CADU,MACH,KADc,CAAC,QAAQ,GAEhC,GAAI,CACF,IAAM,EAAW,MAAM,EAAA,WAAW,CAAC,UAAU,GAC7C,EAAQ,EACV,CAAE,MAAO,EAAgB,CACvB,QAAQ,KAAK,CAAC,8BAA+B,GAExC,EAAc,QAAQ,EAAE,SAAW,KAAK,AAC3C,EAAA,WAAW,CAAC,MAAM,EAEtB,CAEF,GAAW,GACb,GAGF,EAAG,EAAE,EAEL,IAAM,EAAQ,MAAO,EAAkB,KACrC,GAAI,CACF,EAAS,MACT,IAAM,EAAW,MAAM,EAAA,WAAW,CAAC,KAAK,CAAC,UAAE,WAAU,CAAS,GAC9D,EAAQ,EAAS,IAAI,CACvB,CAAE,MAAO,EAAc,CAGrB,MADA,EADqB,OACZ,MAD2B,MAAQ,EAAI,OAAO,CAAG,gBAEpD,CACR,CACF,EAEM,EAAW,MAAO,IACtB,GAAI,CACF,EAAS,MACT,IAAM,EAAW,MAAM,EAAA,WAAW,CAAC,QAAQ,CAAC,GAC5C,EAAQ,EAAS,IAAI,CACvB,CAAE,MAAO,EAAc,CAGrB,MADA,EADqB,OACZ,MAD2B,MAAQ,EAAI,OAAO,CAAG,uBAEpD,CACR,CACF,EAEM,EAAS,UACb,GAAI,CACF,MAAM,EAAA,WAAW,CAAC,MAAM,GACxB,EAAQ,MACR,EAAS,KACX,CAAE,MAAO,EAAU,CACjB,QAAQ,KAAK,CAAC,gBAAiB,GAE/B,EAAQ,MACR,EAAS,KACX,CACF,EAEM,EAAgB,MAAO,IAC3B,GAAI,CACF,EAAS,MACT,IAAM,EAAc,MAAM,EAAA,WAAW,CAAC,aAAa,CAAC,GACpD,EAAQ,EACV,CAAE,MAAO,EAAc,CAGrB,MADA,EADqB,OACZ,MAD2B,MAAQ,EAAI,OAAO,CAAG,yBAEpD,CACR,CACF,EAEM,EAAiB,MAAO,IAC5B,GAAI,CACF,EAAS,MACT,MAAM,EAAA,WAAW,CAAC,cAAc,CAAC,EACnC,CAAE,MAAO,EAAc,CAGrB,MADA,EADqB,OACZ,MAD2B,MAAQ,EAAI,OAAO,CAAG,0BAEpD,CACR,CACF,EAmBA,MAAO,CAAA,EAAA,EAAA,GAAA,EAAC,EAAY,QAAQ,CAAA,CAAC,MAbf,CAasB,KAZlC,UACA,QACA,WACA,SACA,gBACA,iBACA,EACA,gBAAiB,CAAC,CAAC,QACnB,EACA,WAdiB,KACjB,EAAS,KACX,CAaA,WAE4C,GAC9C","ignoreList":[0,1,2]}